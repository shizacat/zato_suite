
Установка из исходного кода:
- https://zato.io/docs/admin/guide/install/source.html

== Setup ==

Запуск зато через контейнер
```
docker run --rm shizacat/zato_base <arguments>
```

=== Create Zato ODB ===

```
zato create odb postgresql \
    --odb_host localhost \
    --odb_port 5432 \
    --odb_user zato1 \
    --odb_db_name zatodb1
```


=== Create cluster ===

Creates a cluster’s configuration in the ODB.
- https://zato.io/docs/admin/cli/create-cluster.html

Смотрите хелп, они немного меняют аргументы

Указываем технический аккаунт, он должен быть такой же и для веба!!! (tech_account_name, --tech_account_password)

```
# Example
zato create cluster postgresql \
	--odb_host localhost \
    --odb_port 5432 \
    --odb_user zato1 \
    --odb_db_name zatodb1 \
    --tech_account_password tech_password \
    lb_host 11223 20151 \
    redis_host 6379 \
    cluster_name \
    tech_account_name
```


=== Создание сертификатов ===

Взят скрипт из quick_setup:
```
scripts/gencert.sh
```


=== Create and start Zato components ===

Создаются из соответсвующий докер образов.

==== Load Balancer ====

Сервера добавляются через веб панель администрирования.

После добавления в файле конфига балансера должна появиться примерно такая строчка

```
backend bck_http_plain
    server http_plain--server1 127.0.0.1:17010 check inter 2s rise 2 fall 2
```

Глюки:
- Если папка с настройками находиться на смонтированном разделе, то нужно в настройках менять путь к haproxy-stat.sock, чтобы он лежал внутри контейнера.

https://zato.io/download/docker/2.0/components/load-balancer/Dockerfile


==== Web Admin ====

Настройки:
- TIME_ZONE
- DEBUG

- https://zato.io/docs/admin/guide/install-config/config-web-admin.html


==== Server ====

